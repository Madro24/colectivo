<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <!-- Rest authentication entry point configuration -->
    <http use-expressions="true" create-session="stateless"
        entry-point-ref="restServicesEntryPoint" authentication-manager-ref="authenticationManagerForRest">
        <intercept-url pattern="/**" />
        <form-login 
        	authentication-success-handler-ref="mySuccessHandler" 
        	username-parameter="username"
			password-parameter="password"/>
        <access-denied-handler ref="myAuthenticationAccessDeniedHandler" />
        <http-basic />
    </http>
    
    <!-- Entry point for REST service. -->
    <beans:bean id="restServicesEntryPoint"
        class="com.sstacorp.colectivo.security.apiconfig.RestAuthenticationEntryPoint" />
 
    <!-- Connect the custom authentication success handler -->
    <beans:bean id="mySuccessHandler"
        class="com.sstacorp.colectivo.security.apiconfig.RestAuthenticationSuccessHandler" />
 
    <!-- Using Authentication Access Denied handler -->
    <beans:bean id="myAuthenticationAccessDeniedHandler"
        class="com.sstacorp.colectivo.security.apiconfig.RestAuthenticationAccessDeniedHandler" />
 
	<authentication-manager alias="authenticationManagerForRest">
		<authentication-provider ref="limitLoginAuthenticationProvider" />
	</authentication-manager>

    <!-- Enable the annotations for defining the secure role -->
    <global-method-security secured-annotations="enabled" />
    
</beans:beans>
